kind: pipeline
name: docker

trigger:
  branch:
    - dev

volumes:
  - name: docker
    host:
      path: /var/run/docker.sock

workspace:
  path: /go/src/github.com/minio/mc

clone:
  disable: true

steps:
  - name: s3-cache
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-s3-cache:1.0
    settings:
      restore: true
      mount:
        - ./.git
      endpoint: https://cache.ali.wodcloud.com
      access_key:
        from_secret: S3_ACCESS_KEY_ALIYUN
      secret_key:
        from_secret: S3_SECRET_KEY_ALIYUN

  - name: fetch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-git:1.0
    settings:
      proxy:
        from_secret: SOCKS5_PROXY

  - name: golang
    image: registry.cn-qingdao.aliyuncs.com/wod/golang:1.22-alpine
    commands:
      - bash .beagle/build.sh

  - name: docker-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      dockerfile: .beagle/dockerfile
      base: registry.cn-qingdao.aliyuncs.com/wod/alpine:3-amd64
      repo: wod/mc
      version: 2024-10-02
      channel: amd64
      args: 'TARGETOS=linux,TARGETARCH=amd64'
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: docker-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      dockerfile: .beagle/dockerfile
      base: registry.cn-qingdao.aliyuncs.com/wod/alpine:3-arm64
      repo: wod/mc
      version: 2024-10-02
      channel: arm64
      args: 'TARGETOS=linux,TARGETARCH=arm64'
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: docker-arch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-manifest:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      platforms: linux/amd64,linux/arm64
      template: registry.cn-qingdao.aliyuncs.com/wod/mc:2024-10-02-ARCH
      target: registry.cn-qingdao.aliyuncs.com/wod/mc:2024-10-02
      username:
        from_secret: REGISTRY_USER_ALIYUN
      password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: minio
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-minio:1.0
    environment:
      S3_ACCESS_KEY:
        from_secret: S3_ACCESS_KEY_ALIYUN
      S3_SECRET_KEY:
        from_secret: S3_SECRET_KEY_ALIYUN
    commands:
      - mc alias set aliyun --api=S3v4 https://cache.ali.wodcloud.com $S3_ACCESS_KEY $S3_SECRET_KEY
      - mkdir -p parts/2024-10-02
      - mv parts/linux/amd64/mc parts/2024-10-02/mc_2024-10-02_amd64
      - mv parts/linux/arm64/mc parts/2024-10-02/mc_2024-10-02_arm64
      - mc cp --recursive parts/2024-10-02/ aliyun/vscode/minio/

---
kind: pipeline
name: harbor

trigger:
  branch:
    - main

clone:
  disable: true

steps:
  - name: harbor-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-tag:1.0
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod/mc:2024-10-02-amd64
      target: registry.cn-qingdao.aliyuncs.com/wod/mc:2024-amd64
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: harbor-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-tag:1.0
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod/mc:2024-10-02-arm64
      target: registry.cn-qingdao.aliyuncs.com/wod/mc:2024-arm64
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: harbor-arch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-manifest:1.0
    settings:
      platforms: linux/amd64,linux/arm64
      template: registry.cn-qingdao.aliyuncs.com/wod/mc:2024-ARCH
      target: registry.cn-qingdao.aliyuncs.com/wod/mc:2024
      username:
        from_secret: REGISTRY_USER_ALIYUN
      password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: minio
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-minio:1.0
    environment:
      S3_ACCESS_KEY:
        from_secret: S3_ACCESS_KEY_ALIYUN
      S3_SECRET_KEY:
        from_secret: S3_SECRET_KEY_ALIYUN
    commands:
      - mc alias set aliyun --api=S3v4 https://cache.ali.wodcloud.com $S3_ACCESS_KEY $S3_SECRET_KEY
      - mc cp aliyun/vscode/minio/mc_2024-10-02_amd64 aliyun/vscode/minio/mc_2024_amd64
      - mc cp aliyun/vscode/minio/mc_2024-10-02_arm64 aliyun/vscode/minio/mc_2024_arm64

---
kind: secret
name: SOCKS5_PROXY
get:
  name: SOCKS5_PROXY
  path: devops-secrets

---
kind: secret
name: REGISTRY_USER_ALIYUN
get:
  name: REGISTRY_USER_ALIYUN
  path: devops-secrets

---
kind: secret
name: REGISTRY_PASSWORD_ALIYUN
get:
  name: REGISTRY_PASSWORD_ALIYUN
  path: devops-secrets

---
kind: secret
name: S3_ACCESS_KEY_ALIYUN
get:
  name: S3_ACCESS_KEY_ALIYUN
  path: devops-secrets

---
kind: secret
name: S3_SECRET_KEY_ALIYUN
get:
  name: S3_SECRET_KEY_ALIYUN
  path: devops-secrets
